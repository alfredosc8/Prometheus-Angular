version: '3.1'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  front-tier:
  back-tier:

services:
  frontent:
    build:
      context: ./angularclient/
      dockerfile: Dockerfile
    ports:
      - 4200:80
    networks:
      - back-tier
    restart: always
  backend:
    build:
      context: ./
      dockerfile: src/main/resources/Dockerfile
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./external/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
      - backend:backend
    depends_on:
      - cadvisor
    networks:
      - back-tier
    restart: always
  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
#    deploy:
#      mode: global

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./external/alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8082:8080
    networks:
      - back-tier
    restart: always
#    deploy:
#      mode: global

  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./external/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./external/grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always
    environment:
    - GF_INSTALL_PLUGINS=grafana-piechart-panel
